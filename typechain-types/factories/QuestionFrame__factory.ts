/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { QuestionFrame, QuestionFrameInterface } from "../QuestionFrame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "labels",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "element",
        type: "uint256",
      },
    ],
    name: "accept",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newDescription",
        type: "string",
      },
    ],
    name: "editDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newTitle",
        type: "string",
      },
    ],
    name: "editTitle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExtras",
    outputs: [
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLabels",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScores",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTitle",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "malformed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "malformedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "none",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "noneCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "report",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reportCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "element",
        type: "uint256",
      },
    ],
    name: "score",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVoters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bb538038062001bb583398101604081905262000034916200027f565b600080546001600160a01b0319166001600160a01b038516179055815162000064906001906020850190620000db565b508060405162000074906200016a565b6200008091906200039a565b604051809103906000f0801580156200009d573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055505060006004819055600581905560068190556008555062000455565b828054620000e99062000418565b90600052602060002090601f0160209004810192826200010d576000855562000158565b82601f106200012857805160ff191683800117855562000158565b8280016001018555821562000158579182015b82811115620001585782518255916020019190600101906200013b565b506200016692915062000178565b5090565b6109bd80620011f883390190565b5b8082111562000166576000815560010162000179565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001d057620001d06200018f565b604052919050565b60005b83811015620001f5578181015183820152602001620001db565b8381111562000205576000848401525b50505050565b600082601f8301126200021d57600080fd5b81516001600160401b038111156200023957620002396200018f565b6200024e601f8201601f1916602001620001a5565b8181528460208386010111156200026457600080fd5b62000277826020830160208701620001d8565b949350505050565b6000806000606084860312156200029557600080fd5b83516001600160a01b0381168114620002ad57600080fd5b602085810151919450906001600160401b0380821115620002cd57600080fd5b620002db888389016200020b565b94506040870151915080821115620002f257600080fd5b818701915087601f8301126200030757600080fd5b8151818111156200031c576200031c6200018f565b8060051b6200032d858201620001a5565b918252838101850191858101908b8411156200034857600080fd5b86860192505b838310156200038957825185811115620003685760008081fd5b620003788d89838a01016200020b565b83525091860191908601906200034e565b809750505050505050509250925092565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200040b57878503603f1901845281518051808752620003eb818989018a8501620001d8565b601f01601f191695909501860194509285019290850190600101620003c1565b5092979650505050505050565b600181811c908216806200042d57607f821691505b602082108114156200044f57634e487b7160e01b600052602260045260246000fd5b50919050565b610d9380620004656000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636eb83689116100a2578063a877db9f11610071578063a877db9f1461021b578063b0f41e1314610223578063d1730f1f1461022b578063e0619c831461023e578063ff3c1a8f1461024657600080fd5b80636eb83689146101c55780637ecfc93e146101d8578063893d20e8146101ed578063a6fedc701461020857600080fd5b80631ea1380c116100e95780631ea1380c146101685780632606a10b1461017d5780634abd18ab146101855780635f5300ff1461019a57806364821338146101a257600080fd5b80630a39e7bc1461011b578063185c6f841461012557806319b05f49146101405780631a09254114610153575b600080fd5b61012361024e565b005b61012d610324565b6040519081526020015b60405180910390f35b61012361014e36600461086e565b610342565b61015b610441565b60405161013791906108e3565b6101706104d6565b60405161013791906108fd565b61012361055c565b61018d6105c8565b6040516101379190610941565b60085461012d565b3360009081526007602052604090205460ff166040519015158152602001610137565b6101236101d33660046109a3565b610649565b6101e061065a565b6040516101379190610a15565b6000546040516001600160a01b039091168152602001610137565b6101236102163660046109a3565b610695565b6101236106a1565b61012d61070d565b61012d61023936600461086e565b610718565b61012d61079b565b61015b6107a5565b3360009081526007602052604090205460ff16156102875760405162461bcd60e51b815260040161027e90610a46565b60405180910390fd5b60095460ff16156102aa5760405162461bcd60e51b815260040161027e90610a7d565b6009805460ff191660019081179091556004815b600381106102ce576102ce610ac8565b0160008282546102de9190610ade565b9091555050336000908152600760205260408120805460ff191660019081179091556008805491929091610313908490610ade565b90915550506009805460ff19169055565b6000600460025b6003811061033b5761033b610ac8565b0154905090565b3360009081526007602052604090205460ff16156103725760405162461bcd60e51b815260040161027e90610a46565b60095460ff16156103955760405162461bcd60e51b815260040161027e90610a7d565b6009805460ff191660011790556003546040516319b05f4960e01b8152600481018390526001600160a01b03909116906319b05f4990602401600060405180830381600087803b1580156103e857600080fd5b505af11580156103fc573d6000803e3d6000fd5b5050336000908152600760205260408120805460ff1916600190811790915560088054919450925061042f908490610ade565b90915550506009805460ff1916905550565b60606000600201805461045390610b04565b80601f016020809104026020016040519081016040528092919081815260200182805461047f90610b04565b80156104cc5780601f106104a1576101008083540402835291602001916104cc565b820191906000526020600020905b8154815290600101906020018083116104af57829003601f168201915b5050505050905090565b600354604080516307a84e0360e21b815290516060926001600160a01b031691631ea1380c916004808301926000929190829003018186803b15801561051b57600080fd5b505afa15801561052f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105579190810190610baa565b905090565b3360009081526007602052604090205460ff161561058c5760405162461bcd60e51b815260040161027e90610a46565b60095460ff16156105af5760405162461bcd60e51b815260040161027e90610a7d565b6009805460ff19166001908117909155600460026102be565b60035460408051634abd18ab60e01b815290516060926001600160a01b031691634abd18ab916004808301926000929190829003018186803b15801561060d57600080fd5b505afa158015610621573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105579190810190610c40565b610655600183836107b7565b505050565b61066261083b565b6040805160608101918290529060049060039082845b815481526020019060010190808311610678575050505050905090565b610655600283836107b7565b3360009081526007602052604090205460ff16156106d15760405162461bcd60e51b815260040161027e90610a46565b60095460ff16156106f45760405162461bcd60e51b815260040161027e90610a7d565b6009805460ff19166001908117909155600460006102be565b60006004600161032b565b60035460405163d1730f1f60e01b8152600481018390526000916001600160a01b03169063d1730f1f9060240160206040518083038186803b15801561075d57600080fd5b505afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190610d44565b92915050565b600060048161032b565b60606000600101805461045390610b04565b8280546107c390610b04565b90600052602060002090601f0160209004810192826107e5576000855561082b565b82601f106107fe5782800160ff1982351617855561082b565b8280016001018555821561082b579182015b8281111561082b578235825591602001919060010190610810565b50610837929150610859565b5090565b60405180606001604052806003906020820280368337509192915050565b5b80821115610837576000815560010161085a565b60006020828403121561088057600080fd5b5035919050565b60005b838110156108a257818101518382015260200161088a565b838111156108b1576000848401525b50505050565b600081518084526108cf816020860160208601610887565b601f01601f19169290920160200192915050565b6020815260006108f660208301846108b7565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561093557835183529284019291840191600101610919565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561099657603f198886030184526109848583516108b7565b94509285019290850190600101610968565b5092979650505050505050565b600080602083850312156109b657600080fd5b823567ffffffffffffffff808211156109ce57600080fd5b818501915085601f8301126109e257600080fd5b8135818111156109f157600080fd5b866020828501011115610a0357600080fd5b60209290920196919550909350505050565b60608101818360005b6003811015610a3d578151835260209283019290910190600101610a1e565b50505092915050565b60208082526018908201527f416c726561647920706572666f726d656420616374696f6e0000000000000000604082015260600190565b6020808252602b908201527f4e6f207265656e7472616e6379207768696c6520746865206d6574686f64206960408201526a7320657865637574696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60008219821115610aff57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610b1857607f821691505b60208210811415610b3957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b7e57610b7e610b3f565b604052919050565b600067ffffffffffffffff821115610ba057610ba0610b3f565b5060051b60200190565b60006020808385031215610bbd57600080fd5b825167ffffffffffffffff811115610bd457600080fd5b8301601f81018513610be557600080fd5b8051610bf8610bf382610b86565b610b55565b81815260059190911b82018301908381019087831115610c1757600080fd5b928401925b82841015610c3557835182529284019290840190610c1c565b979650505050505050565b60006020808385031215610c5357600080fd5b825167ffffffffffffffff80821115610c6b57600080fd5b8185019150601f8681840112610c8057600080fd5b8251610c8e610bf382610b86565b81815260059190911b84018501908581019089831115610cad57600080fd5b8686015b83811015610d3657805186811115610cc95760008081fd5b8701603f81018c13610cdb5760008081fd5b88810151604088821115610cf157610cf1610b3f565b610d02828901601f19168c01610b55565b8281528e82848601011115610d175760008081fd5b610d26838d8301848701610887565b8652505050918701918701610cb1565b509998505050505050505050565b600060208284031215610d5657600080fd5b505191905056fea26469706673582212207474806dc8e87d9778687d76e8a013b7920c2792e24efe8c93d2f456a3c182c664736f6c6343000809003360806040523480156200001157600080fd5b50604051620009bd380380620009bd8339810160408190526200003491620001cf565b60005b81518160ff161015620000d8576001828260ff16815181106200005e576200005e6200031b565b60209081029190910181015182546001810184556000938452928290208151620000929491909101929190910190620000e0565b50600080546001810182558180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015580620000cf8162000331565b91505062000037565b50506200039d565b828054620000ee9062000360565b90600052602060002090601f0160209004810192826200011257600085556200015d565b82601f106200012d57805160ff19168380011785556200015d565b828001600101855582156200015d579182015b828111156200015d57825182559160200191906001019062000140565b506200016b9291506200016f565b5090565b5b808211156200016b576000815560010162000170565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001c757620001c762000186565b604052919050565b60006020808385031215620001e357600080fd5b82516001600160401b0380821115620001fb57600080fd5b8185019150601f86818401126200021157600080fd5b82518281111562000226576200022662000186565b8060051b620002378682016200019c565b918252848101860191868101908a8411156200025257600080fd5b87870192505b838310156200030d57825186811115620002725760008081fd5b8701603f81018c13620002855760008081fd5b88810151878111156200029c576200029c62000186565b620002af818801601f19168b016200019c565b81815260408e81848601011115620002c75760008081fd5b60005b83811015620002e7578481018201518382018e01528c01620002ca565b83811115620002f95760008d85850101525b505084525050918701919087019062000258565b9a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8114156200035757634e487b7160e01b600052601160045260246000fd5b60010192915050565b600181811c908216806200037557607f821691505b602082108114156200039757634e487b7160e01b600052602260045260246000fd5b50919050565b61061080620003ad6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806319b05f491461005c5780631ea1380c146100715780634abd18ab1461008f578063538faa8c146100a4578063d1730f1f146100b7575b600080fd5b61006f61006a3660046103a8565b6100d8565b005b61007961013b565b60405161008691906103c1565b60405180910390f35b610097610193565b6040516100869190610405565b61006f6100b23660046104a0565b61026c565b6100ca6100c53660046103a8565b6102c2565b604051908152602001610086565b600154819081106101045760405162461bcd60e51b81526004016100fb9061051c565b60405180910390fd5b60016000838154811061011957610119610569565b906000526020600020016000828254610132919061057f565b90915550505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561018957602002820191906000526020600020905b815481526020019060010190808311610175575b5050505050905090565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156102635783829060005260206000200180546101d6906105a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610202906105a5565b801561024f5780601f106102245761010080835404028352916020019161024f565b820191906000526020600020905b81548152906001019060200180831161023257829003601f168201915b5050505050815260200190600101906101b7565b50505050905090565b6001548390811061028f5760405162461bcd60e51b81526004016100fb9061051c565b8282600186815481106102a4576102a4610569565b9060005260206000200191906102bb92919061030f565b5050505050565b600154600090829081106102e85760405162461bcd60e51b81526004016100fb9061051c565b600083815481106102fb576102fb610569565b906000526020600020015491505b50919050565b82805461031b906105a5565b90600052602060002090601f01602090048101928261033d5760008555610383565b82601f106103565782800160ff19823516178555610383565b82800160010185558215610383579182015b82811115610383578235825591602001919060010190610368565b5061038f929150610393565b5090565b5b8082111561038f5760008155600101610394565b6000602082840312156103ba57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103f9578351835292840192918401916001016103dd565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b87010192508387016000805b8381101561049257888603603f1901855282518051808852835b81811015610462578281018a01518982018b01528901610447565b8181111561047257848a838b0101525b50601f01601f19169690960187019550938601939186019160010161042d565b509398975050505050505050565b6000806000604084860312156104b557600080fd5b83359250602084013567ffffffffffffffff808211156104d457600080fd5b818601915086601f8301126104e857600080fd5b8135818111156104f757600080fd5b87602082850101111561050957600080fd5b6020830194508093505050509250925092565b6020808252602d908201527f566f74696e6720656c656d656e74206f757473696465206f662074686520717560408201526c195cdd1a5bdb9cc8189bdd5b99609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082198211156105a057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806105b957607f821691505b6020821081141561030957634e487b7160e01b600052602260045260246000fdfea2646970667358221220ec63e45d78ec66b732bc9bd20b3652d4ccfdc2e4160def64555fe0bd2ae5953364736f6c63430008090033";

type QuestionFrameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuestionFrameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QuestionFrame__factory extends ContractFactory {
  constructor(...args: QuestionFrameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner: PromiseOrValue<string>,
    title: PromiseOrValue<string>,
    labels: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<QuestionFrame> {
    return super.deploy(
      owner,
      title,
      labels,
      overrides || {}
    ) as Promise<QuestionFrame>;
  }
  override getDeployTransaction(
    owner: PromiseOrValue<string>,
    title: PromiseOrValue<string>,
    labels: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, title, labels, overrides || {});
  }
  override attach(address: string): QuestionFrame {
    return super.attach(address) as QuestionFrame;
  }
  override connect(signer: Signer): QuestionFrame__factory {
    return super.connect(signer) as QuestionFrame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuestionFrameInterface {
    return new utils.Interface(_abi) as QuestionFrameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuestionFrame {
    return new Contract(address, _abi, signerOrProvider) as QuestionFrame;
  }
}
