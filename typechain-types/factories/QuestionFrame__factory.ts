/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { QuestionFrame, QuestionFrameInterface } from "../QuestionFrame";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "labels",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "element",
        type: "uint256",
      },
    ],
    name: "accept",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newDescription",
        type: "string",
      },
    ],
    name: "editDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newTitle",
        type: "string",
      },
    ],
    name: "editTitle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTitle",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "malformed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "malformedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "none",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "noneCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "report",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reportCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "element",
        type: "uint256",
      },
    ],
    name: "score",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scoreTable",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVoters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a4a38038062001a4a833981016040819052620000349162000275565b600080546001600160a01b0319163317905581516200005b906001906020850190620000d1565b50806040516200006b9062000160565b6200007791906200036c565b604051809103906000f08015801562000094573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b03929092169190911790555050600060048190556005819055600681905560095562000427565b828054620000df90620003ea565b90600052602060002090601f0160209004810192826200010357600085556200014e565b82601f106200011e57805160ff19168380011785556200014e565b828001600101855582156200014e579182015b828111156200014e57825182559160200191906001019062000131565b506200015c9291506200016e565b5090565b6109bd806200108d83390190565b5b808211156200015c57600081556001016200016f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001c657620001c662000185565b604052919050565b60005b83811015620001eb578181015183820152602001620001d1565b83811115620001fb576000848401525b50505050565b600082601f8301126200021357600080fd5b81516001600160401b038111156200022f576200022f62000185565b62000244601f8201601f19166020016200019b565b8181528460208386010111156200025a57600080fd5b6200026d826020830160208701620001ce565b949350505050565b600080604083850312156200028957600080fd5b82516001600160401b0380821115620002a157600080fd5b620002af8683870162000201565b9350602091508185015181811115620002c757600080fd5b8501601f81018713620002d957600080fd5b805182811115620002ee57620002ee62000185565b8060051b620002ff8582016200019b565b918252828101850191858101908a8411156200031a57600080fd5b86850192505b838310156200035b578251868111156200033a5760008081fd5b6200034a8c898389010162000201565b835250918601919086019062000320565b809750505050505050509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620003dd57878503603f1901845281518051808752620003bd818989018a8501620001ce565b601f01601f19169590950186019450928501929085019060010162000393565b5092979650505050505050565b600181811c90821680620003ff57607f821691505b602082108114156200042157634e487b7160e01b600052602260045260246000fd5b50919050565b610c5680620004376000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063893d20e811610097578063b0f41e1311610066578063b0f41e13146101b2578063d1730f1f146101ba578063e0619c83146101cd578063ff3c1a8f146101d557600080fd5b8063893d20e814610166578063931d416e14610181578063a6fedc7014610197578063a877db9f146101aa57600080fd5b80631a092541116100d35780631a0925411461012e5780632606a10b146101435780635f5300ff1461014b5780636eb836891461015357600080fd5b80630a39e7bc146100fa578063185c6f841461010457806319b05f491461011b575b600080fd5b6101026101dd565b005b6006545b6040519081526020015b60405180910390f35b610102610129366004610783565b6102a1565b6101366103a0565b60405161011291906107f8565b610102610435565b600954610108565b610102610161366004610812565b6104aa565b6000546040516001600160a01b039091168152602001610112565b6101896104bb565b604051610112929190610884565b6101026101a5366004610812565b6105d4565b6101026105e0565b600554610108565b6101086101c8366004610783565b610655565b600454610108565b6101366106d8565b3360009081526007602052604090205460ff16156102165760405162461bcd60e51b815260040161020d9061091f565b60405180910390fd5b60085460ff16156102395760405162461bcd60e51b815260040161020d90610956565b6008805460ff191660019081179091556005805460009061025b9084906109a1565b9091555050336000908152600760205260408120805460ff1916600190811790915560098054919290916102909084906109a1565b90915550506008805460ff19169055565b3360009081526007602052604090205460ff16156102d15760405162461bcd60e51b815260040161020d9061091f565b60085460ff16156102f45760405162461bcd60e51b815260040161020d90610956565b6008805460ff191660011790556003546040516319b05f4960e01b8152600481018390526001600160a01b03909116906319b05f4990602401600060405180830381600087803b15801561034757600080fd5b505af115801561035b573d6000803e3d6000fd5b5050336000908152600760205260408120805460ff1916600190811790915560098054919450925061038e9084906109a1565b90915550506008805460ff1916905550565b6060600060020180546103b2906109c7565b80601f01602080910402602001604051908101604052809291908181526020018280546103de906109c7565b801561042b5780601f106104005761010080835404028352916020019161042b565b820191906000526020600020905b81548152906001019060200180831161040e57829003601f168201915b5050505050905090565b3360009081526007602052604090205460ff16156104655760405162461bcd60e51b815260040161020d9061091f565b60085460ff16156104885760405162461bcd60e51b815260040161020d90610956565b6008805460ff191660019081179091556006805460009061025b9084906109a1565b6104b6600183836106ea565b505050565b606080600060030160009054906101000a90046001600160a01b03166001600160a01b0316634abd18ab6040518163ffffffff1660e01b815260040160006040518083038186803b15801561050f57600080fd5b505afa158015610523573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261054b9190810190610a6d565b600354604080516307a84e0360e21b815290516001600160a01b0390921691631ea1380c91600480820192600092909190829003018186803b15801561059057600080fd5b505afa1580156105a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cc9190810190610b76565b915091509091565b6104b6600283836106ea565b3360009081526007602052604090205460ff16156106105760405162461bcd60e51b815260040161020d9061091f565b60085460ff16156106335760405162461bcd60e51b815260040161020d90610956565b6008805460ff191660019081179091556004805460009061025b9084906109a1565b60035460405163d1730f1f60e01b8152600481018390526000916001600160a01b03169063d1730f1f9060240160206040518083038186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d29190610c07565b92915050565b6060600060010180546103b2906109c7565b8280546106f6906109c7565b90600052602060002090601f016020900481019282610718576000855561075e565b82601f106107315782800160ff1982351617855561075e565b8280016001018555821561075e579182015b8281111561075e578235825591602001919060010190610743565b5061076a92915061076e565b5090565b5b8082111561076a576000815560010161076f565b60006020828403121561079557600080fd5b5035919050565b60005b838110156107b757818101518382015260200161079f565b838111156107c6576000848401525b50505050565b600081518084526107e481602086016020860161079c565b601f01601f19169290920160200192915050565b60208152600061080b60208301846107cc565b9392505050565b6000806020838503121561082557600080fd5b823567ffffffffffffffff8082111561083d57600080fd5b818501915085601f83011261085157600080fd5b81358181111561086057600080fd5b86602082850101111561087257600080fd5b60209290920196919550909350505050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156108db57605f198887030185526108c98683516107cc565b955093820193908201906001016108ad565b50508584038187015286518085528782019482019350915060005b82811015610912578451845293810193928101926001016108f6565b5091979650505050505050565b60208082526018908201527f416c726561647920706572666f726d656420616374696f6e0000000000000000604082015260600190565b6020808252602b908201527f4e6f207265656e7472616e6379207768696c6520746865206d6574686f64206960408201526a7320657865637574696e6760a81b606082015260800190565b600082198211156109c257634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806109db57607f821691505b602082108114156109fc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a4157610a41610a02565b604052919050565b600067ffffffffffffffff821115610a6357610a63610a02565b5060051b60200190565b60006020808385031215610a8057600080fd5b825167ffffffffffffffff80821115610a9857600080fd5b8185019150601f8681840112610aad57600080fd5b8251610ac0610abb82610a49565b610a18565b81815260059190911b84018501908581019089831115610adf57600080fd5b8686015b83811015610b6857805186811115610afb5760008081fd5b8701603f81018c13610b0d5760008081fd5b88810151604088821115610b2357610b23610a02565b610b34828901601f19168c01610a18565b8281528e82848601011115610b495760008081fd5b610b58838d830184870161079c565b8652505050918701918701610ae3565b509998505050505050505050565b60006020808385031215610b8957600080fd5b825167ffffffffffffffff811115610ba057600080fd5b8301601f81018513610bb157600080fd5b8051610bbf610abb82610a49565b81815260059190911b82018301908381019087831115610bde57600080fd5b928401925b82841015610bfc57835182529284019290840190610be3565b979650505050505050565b600060208284031215610c1957600080fd5b505191905056fea26469706673582212205c67cdb764002022768f66a8575b6fe8fe1fb5ccd84cc23b78baba279cd37c4c64736f6c6343000809003360806040523480156200001157600080fd5b50604051620009bd380380620009bd8339810160408190526200003491620001cf565b60005b81518160ff161015620000d8576001828260ff16815181106200005e576200005e6200031b565b60209081029190910181015182546001810184556000938452928290208151620000929491909101929190910190620000e0565b50600080546001810182558180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015580620000cf8162000331565b91505062000037565b50506200039d565b828054620000ee9062000360565b90600052602060002090601f0160209004810192826200011257600085556200015d565b82601f106200012d57805160ff19168380011785556200015d565b828001600101855582156200015d579182015b828111156200015d57825182559160200191906001019062000140565b506200016b9291506200016f565b5090565b5b808211156200016b576000815560010162000170565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001c757620001c762000186565b604052919050565b60006020808385031215620001e357600080fd5b82516001600160401b0380821115620001fb57600080fd5b8185019150601f86818401126200021157600080fd5b82518281111562000226576200022662000186565b8060051b620002378682016200019c565b918252848101860191868101908a8411156200025257600080fd5b87870192505b838310156200030d57825186811115620002725760008081fd5b8701603f81018c13620002855760008081fd5b88810151878111156200029c576200029c62000186565b620002af818801601f19168b016200019c565b81815260408e81848601011115620002c75760008081fd5b60005b83811015620002e7578481018201518382018e01528c01620002ca565b83811115620002f95760008d85850101525b505084525050918701919087019062000258565b9a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8114156200035757634e487b7160e01b600052601160045260246000fd5b60010192915050565b600181811c908216806200037557607f821691505b602082108114156200039757634e487b7160e01b600052602260045260246000fd5b50919050565b61061080620003ad6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806319b05f491461005c5780631ea1380c146100715780634abd18ab1461008f578063538faa8c146100a4578063d1730f1f146100b7575b600080fd5b61006f61006a3660046103a8565b6100d8565b005b61007961013b565b60405161008691906103c1565b60405180910390f35b610097610193565b6040516100869190610405565b61006f6100b23660046104a0565b61026c565b6100ca6100c53660046103a8565b6102c2565b604051908152602001610086565b600154819081106101045760405162461bcd60e51b81526004016100fb9061051c565b60405180910390fd5b60016000838154811061011957610119610569565b906000526020600020016000828254610132919061057f565b90915550505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561018957602002820191906000526020600020905b815481526020019060010190808311610175575b5050505050905090565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156102635783829060005260206000200180546101d6906105a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610202906105a5565b801561024f5780601f106102245761010080835404028352916020019161024f565b820191906000526020600020905b81548152906001019060200180831161023257829003601f168201915b5050505050815260200190600101906101b7565b50505050905090565b6001548390811061028f5760405162461bcd60e51b81526004016100fb9061051c565b8282600186815481106102a4576102a4610569565b9060005260206000200191906102bb92919061030f565b5050505050565b600154600090829081106102e85760405162461bcd60e51b81526004016100fb9061051c565b600083815481106102fb576102fb610569565b906000526020600020015491505b50919050565b82805461031b906105a5565b90600052602060002090601f01602090048101928261033d5760008555610383565b82601f106103565782800160ff19823516178555610383565b82800160010185558215610383579182015b82811115610383578235825591602001919060010190610368565b5061038f929150610393565b5090565b5b8082111561038f5760008155600101610394565b6000602082840312156103ba57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156103f9578351835292840192918401916001016103dd565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b87010192508387016000805b8381101561049257888603603f1901855282518051808852835b81811015610462578281018a01518982018b01528901610447565b8181111561047257848a838b0101525b50601f01601f19169690960187019550938601939186019160010161042d565b509398975050505050505050565b6000806000604084860312156104b557600080fd5b83359250602084013567ffffffffffffffff808211156104d457600080fd5b818601915086601f8301126104e857600080fd5b8135818111156104f757600080fd5b87602082850101111561050957600080fd5b6020830194508093505050509250925092565b6020808252602d908201527f566f74696e6720656c656d656e74206f757473696465206f662074686520717560408201526c195cdd1a5bdb9cc8189bdd5b99609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082198211156105a057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806105b957607f821691505b6020821081141561030957634e487b7160e01b600052602260045260246000fdfea2646970667358221220ec63e45d78ec66b732bc9bd20b3652d4ccfdc2e4160def64555fe0bd2ae5953364736f6c63430008090033";

type QuestionFrameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuestionFrameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class QuestionFrame__factory extends ContractFactory {
  constructor(...args: QuestionFrameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    title: PromiseOrValue<string>,
    labels: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<QuestionFrame> {
    return super.deploy(
      title,
      labels,
      overrides || {}
    ) as Promise<QuestionFrame>;
  }
  override getDeployTransaction(
    title: PromiseOrValue<string>,
    labels: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(title, labels, overrides || {});
  }
  override attach(address: string): QuestionFrame {
    return super.attach(address) as QuestionFrame;
  }
  override connect(signer: Signer): QuestionFrame__factory {
    return super.connect(signer) as QuestionFrame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuestionFrameInterface {
    return new utils.Interface(_abi) as QuestionFrameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuestionFrame {
    return new Contract(address, _abi, signerOrProvider) as QuestionFrame;
  }
}
